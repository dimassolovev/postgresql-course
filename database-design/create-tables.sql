CREATE SCHEMA IF NOT EXISTS telegram; -- создадим бд(схему)
SET search_path TO telegram; -- в текущей сессии мы устанавливаем, что будем работать с этой схемой

CREATE TABLE IF NOT EXISTS users
(
    id            BIGSERIAL PRIMARY KEY,        -- id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
    first_name    VARCHAR(100)        NOT NULL, -- VARCHAR(переменная длина) лучше чем CHAR(фиксированная длина)
    last_name     VARCHAR(100)        NOT NULL, -- фамилия
    login         VARCHAR(100)        NOT NULL, -- логин
    email         VARCHAR(100) UNIQUE NOT NULL, -- почта
    hash_password VARCHAR(256)        NOT NULL, -- хэшированный пароль
    phone_number  BIGINT UNIQUE       NOT NULL  -- номер телефона
);

CREATE INDEX username_index ON users (first_name, last_name); -- некластеризованный индекс для двух столбцов с таблицы
COMMENT ON INDEX username_index IS 'users'; -- метаданные, которые хранятся в бд (то есть это не те же комментарии как в коде)

CREATE TYPE COLOR_THEME AS ENUM ('classic', 'day', 'tinted', 'night'); -- тема в телеграме
CREATE TYPE LANG AS ENUM ('english', 'french', 'russian', 'german', 'belorussian', 'croatian', 'dutch'); --

CREATE TABLE IF NOT EXISTS user_settings --
(
    id                       BIGSERIAL PRIMARY KEY,                                 -- id
    user_id                  BIGINT UNIQUE           NOT NULL,                      -- ссылка на user
    is_premium_account       BOOLEAN                 NOT NULL,                      -- премиальный ли аккаунт
    is_night_mode_enabled    BOOLEAN                 NOT NULL,                      -- ночной режим
    color_scheme             COLOR_THEME             NOT NULL,                      -- тема
    status_text              VARCHAR(70)             NOT NULL,                      -- статус
    language                 LANG                    NOT NULL,                      -- язык
    notifications_and_sounds JSON                    NOT NULL,                      -- настройки нотификации и звуков
    created_at               TIMESTAMP DEFAULT NOW() NOT NULL,                      -- время создания
    CONSTRAINT fk_user_settings_user_id FOREIGN KEY (user_id) REFERENCES users (id) -- создаем связь один к одному и добавляем каскадирование
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

ALTER TABLE users
    ADD COLUMN birthday TIMESTAMP; -- добавили новую колонку
ALTER TABLE users -- обновили тип колонки
    ALTER COLUMN birthday TYPE DATE,
    ALTER COLUMN birthday SET NOT NULL;
ALTER TABLE users
    RENAME COLUMN birthday to date_of_birth; -- поменяли имя колонки
ALTER TABLE users
    DROP COLUMN date_of_birth; -- удаляем колонку

CREATE TYPE MEDIA_TYPE AS ENUM ('video', 'message', 'image', 'audio');

CREATE TABLE IF NOT EXISTS private_message
(
    id          BIGSERIAL PRIMARY KEY,            -- id
    sender_id   BIGINT                  NOT NULL, -- id отправителя
    receiver_id BIGINT                  NOT NULL, -- id получателя
    media_type  MEDIA_TYPE              NOT NULL, -- тип сообщения
    body        TEXT,                             -- сообщение
    filename    VARCHAR(200)            NOT NULL, -- имя файла
    created_at  TIMESTAMP DEFAULT NOW() NOT NULL, -- время отправки
    reply_to_id BIGINT                  NULL,
    CONSTRAINT fk_p_m_reply_to_id FOREIGN KEY (reply_to_id) REFERENCES private_message (id),
    CONSTRAINT fk_p_m_sender_id FOREIGN KEY (sender_id) REFERENCES users (id),
    CONSTRAINT fk_p_m_receiver_id FOREIGN KEY (receiver_id) REFERENCES users (id)
)